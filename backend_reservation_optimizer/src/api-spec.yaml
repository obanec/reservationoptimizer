openapi: 3.0.0
info:
  title: Zoom Meeting Management API
  version: 1.0.0
paths:
  # User Endpoints
  /users/login:
    post:
      summary: User login
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    description: Authenticated JWT for the user
        '401':
          description: Unauthorized
  /users:
    get:
      summary: Get a list of users
      tags:
        - Users
      responses:
        '200':
          description: A list of users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
  /users/{userId}:
    put:
      summary: Update a user
      tags:
        - Users
      parameters:
        - name: userId
          in: path
          required: true
          description: ID of the user to update
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: User updated successfully
        '404':
          description: User not found

  # Meeting Endpoints
  /meetings:
    get:
      summary: Get a list of meetings
      tags:
        - Meetings
      responses:
        '200':
          description: A list of meetings
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Meeting'
  /meetings/{meetingId}:
    put:
      summary: Update a meeting
      tags:
        - Meetings
      parameters:
        - name: meetingId
          in: path
          required: true
          description: ID of the meeting to update
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Meeting'
      responses:
        '200':
          description: Meeting updated successfully
        '404':
          description: Meeting not found

  # zoomRoomAccount Endpoints
  /zoomRoomsAccounts:
    get:
      summary: Get a list of Zoom rooms
      tags:
        - ZoomRoomsAccounts
      responses:
        '200':
          description: A list of Zoom rooms
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ZoomRoom'
  /zoomRoomsAccounts/{zoomRoomAccountId}:
    put:
      summary: Update a Zoom room
      tags:
        - ZoomRoomsAccounts
      parameters:
        - name: zoomRoomId
          in: path
          required: true
          description: ID of the Zoom room to update
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ZoomRoom'
      responses:
        '200':
          description: Zoom room updated successfully
        '404':
          description: Zoom room not found

  # ConfigParam Endpoints
  /configParams:
    get:
      summary: Get a list of configuration parameters
      tags:
        - ConfigParams
      responses:
        '200':
          description: A list of configuration parameters
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ConfigParam'
  /configParams/{configParamId}:
    put:
      summary: Update a configuration parameter
      tags:
        - ConfigParams
      parameters:
        - name: configParamId
          in: path
          required: true
          description: ID of the configuration parameter to update
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigParam'
      responses:
        '200':
          description: Configuration parameter updated successfully
        '404':
          description: Configuration parameter not found

components:
  schemas:
    User:
      type: object
      properties:
        email:
          type: string
          format: email
        passwordHash:
          type: string
        role:
          type: string
          enum:
            - admin
            - standard_user
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    Meeting:
      type: object
      properties:
        id:
          type: string
          format: uuid
        title:
          type: string
        description:
          type: string
        startTime:
          type: string
          format: date-time
        endTime:
          type: string
          format: date-time
        zoomRoomId:
          type: string
          format: uuid
        organizerUserId:
          type: string
          format: uuid
        participants:
          type: array
          items:
            type: string
            format: uuid
    ZoomRoomAccount:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        capacity:
          type: integer
        features:
          type: array
          items:
            type: string
        availabilityStatus:
          type: string
    ConfigParam:
      type: object
      properties:
        id:
          type: string
          format: uuid
        paramName:
          type: string
        paramValue:
          type: string
        description:
          type: string
